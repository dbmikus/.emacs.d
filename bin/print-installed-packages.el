#!/usr/bin/emacs --script

(defvar cur-dir (file-name-directory load-file-name))
(load-file (concat cur-dir "../init.el"))
(load-file (concat cur-dir "../elisp/utils.el"))

(defvar dbm-package-file (concat cur-dir "../etc/installed-packages.el"))

(defun strip-duplicates (list)
  "Removes all duplicates from the list argument."
  (let ((new-list nil))
    (while list
      (when (and (car list) (not (member (car list) new-list)))
        (setq new-list (cons (car list) new-list)))
      (setq list (cdr list)))
    (nreverse new-list)))

(defun concat-uniquely (list1 list2)
  "Joins two lists, removing duplicates."
  (strip-duplicates (append list1 list2)))


(defun load-join-packages (package-list-file)
  "If the package list exists, load it in. Regardless, add unique packages to the list of installed packages and return the list of packages."
  (if (file-exists-p package-list-file)
      (concat-uniquely package-activated-list
                       (eval-file package-list-file))
    package-activated-list))

(defun update-package-list-file ( package-list-file)
  "Adds all new packages to the list in the package file."
  (let ((package-list (load-join-packages dbm-package-file)))
    (progn
      (when (file-exists-p dbm-package-file)
        (delete-file dbm-package-file))
      ;; (set-buffer (find-file dbm-package-file))
      (find-file dbm-package-file)
      (erase-buffer)
      (insert ";; Do not edit this file manually! Run emacs.d/bin/update-emacs-packages.el\n")
      (insert (format "'%S" package-list))
      (save-buffer))))

(update-package-list-file dbm-package-file)
